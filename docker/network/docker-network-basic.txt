$ docker run --rm alpine cat /etc/resolv.conf
# Generated by Docker Engine.
# This file can be edited; Docker Engine will not make further changes once it
# has been modified.

nameserver 192.168.65.7

# Based on host file: '/etc/resolv.conf' (legacy)
# Overrides: []
$




  
Why you see 192.168.65.7 instead of 127.0.0.11

  When you run a container without attaching it to a user-defined network (just the default bridge), Docker doesn’t always inject the internal DNS server.
  
  On Docker Desktop (Mac/Windows), you often see an IP like 192.168.65.7 — this is a special DNS forwarder that Docker Desktop runs, which bridges container DNS requests to the host/OS resolver.
  
  On Linux with plain docker0, it may instead copy the host’s /etc/resolv.conf directly.









docker network create mynet

$ docker run --rm --network mynet alpine cat /etc/resolv.conf
# Generated by Docker Engine.
# This file can be edited; Docker Engine will not make further changes once it
# has been modified.

nameserver 127.0.0.11
options ndots:0

# Based on host file: '/etc/resolv.conf' (internal resolver)
# ExtServers: [host(192.168.65.7)]
# Overrides: []
# Option ndots from: internal
$


So in summary

  Default bridge or Docker Desktop → /etc/resolv.conf usually points to a host/forwarder (192.168.65.7 in your case).
  
  User-defined networks → you’ll see 127.0.0.11 (Docker’s internal DNS server).
