
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-demo

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cr-demo
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crb-demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cr-demo
subjects:
- kind: ServiceAccount
  name: sa-demo
  namespace: default


---
# kubectl get sa
# kubectl get clusterrole
# kubectl get clusterrolebinding

# kubectl create serviceaccount sa-demo
# kubectl create clusterrole cr-demo --verb=get,list,watch --resource=pods
# kubectl create clusterrolebinding crb-demo --clusterrole=cr-demo --serviceaccount=ns-demo:sa-demo


