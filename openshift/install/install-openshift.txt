tar -xvf crc-linux-amd64.tar.xz


cd crc-linux-2.55.0-amd64/



mv crc /usr/local/bin/

crc version


# crc version
CRC version: 2.55.0+5be569
OpenShift version: 4.19.13
MicroShift version: 4.19.7
#




# change to non-root user

crc setup 




azureuser@oc1:~$ crc setup
CRC is constantly improving and we would like to know more about usage (more details at https://developers.redhat.com/article/tool-data-collection)
Your preference can be changed manually if desired using 'crc config set consent-telemetry <yes/no>'
Would you like to contribute anonymous usage statistics? [y/N]: y
Thanks for helping us! You can disable telemetry with the command 'crc config set consent-telemetry no'.
INFO Using bundle path /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle
INFO Checking if running as non-root
INFO Checking if running inside WSL2
INFO Checking if crc-admin-helper executable is cached
INFO Caching crc-admin-helper executable
INFO Using root access: Changing ownership of /home/azureuser/.crc/bin/crc-admin-helper-linux-amd64
INFO Using root access: Setting suid for /home/azureuser/.crc/bin/crc-admin-helper-linux-amd64
INFO Checking if running on a supported CPU architecture
INFO Checking if crc executable symlink exists
INFO Creating symlink for crc executable
INFO Checking minimum RAM requirements
INFO Check if Podman binary exists in: /home/azureuser/.crc/bin/oc
INFO Checking if Virtualization is enabled
INFO Checking if KVM is enabled
INFO Checking if libvirt is installed
INFO Installing libvirt service and dependencies
INFO Using root access: Installing virtualization packages
INFO Checking if user is part of libvirt group
INFO Checking if active user/process is currently part of the libvirt group
ERRO You need to logout, re-login, and run crc setup again before the user is effectively a member of the 'libvirt' group.
azureuser@oc1:~$



azureuser@oc1:~$ crc setup
INFO Using bundle path /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle
INFO Checking if running as non-root
INFO Checking if running inside WSL2
INFO Checking if crc-admin-helper executable is cached
INFO Checking if running on a supported CPU architecture
INFO Checking if crc executable symlink exists
INFO Checking minimum RAM requirements
INFO Check if Podman binary exists in: /home/azureuser/.crc/bin/oc
INFO Checking if Virtualization is enabled
INFO Checking if KVM is enabled
INFO Checking if libvirt is installed
INFO Checking if user is part of libvirt group
INFO Checking if active user/process is currently part of the libvirt group
INFO Checking if libvirt daemon is running
INFO Checking if a supported libvirt version is installed
INFO Checking if crc-driver-libvirt is installed
INFO Installing crc-driver-libvirt
INFO Checking crc daemon systemd service
INFO Setting up crc daemon systemd service
INFO Checking crc daemon systemd socket units
INFO Setting up crc daemon systemd socket units
INFO Checking if AppArmor is configured
INFO Updating AppArmor configuration
INFO Using root access: Updating AppArmor configuration
INFO Using root access: Changing permissions for /etc/apparmor.d/libvirt/TEMPLATE.qemu to 644
INFO Checking if vsock is correctly configured
INFO Setting up vsock support
INFO Using root access: Setting CAP_NET_BIND_SERVICE capability for /usr/local/bin/crc executable
INFO Using root access: Creating udev rule for /dev/vsock
INFO Using root access: Changing permissions for /etc/udev/rules.d/99-crc-vsock.rules to 644
INFO Using root access: Reloading udev rules database
INFO Using root access: Loading vhost_vsock kernel module
INFO Using root access: Creating file /etc/modules-load.d/vhost_vsock.conf
INFO Using root access: Changing permissions for /etc/modules-load.d/vhost_vsock.conf to 644
INFO Checking if CRC bundle is extracted in '$HOME/.crc'
INFO Checking if /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle exists
INFO Getting bundle for the CRC executable
INFO Downloading bundle: /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle...
6.40 GiB / 6.40 GiB [-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------] 100.00% 116.55 MiB/s
INFO Uncompressing /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle
crc.qcow2:  19.04 GiB / 22.04 GiB [--------------------------------------------------------------------------------------------------------------------------------------------------------------------------->___________________________] 86.38%
Your system is correctly setup for using CRC. Use 'crc start' to start the instance
azureuser@oc1:~$







crc start




$ crc start
INFO Using bundle path /home/azureuser/.crc/cache/crc_libvirt_4.19.13_amd64.crcbundle
INFO Checking if running as non-root
INFO Checking if running inside WSL2
INFO Checking if crc-admin-helper executable is cached
INFO Checking if running on a supported CPU architecture
INFO Checking if crc executable symlink exists
INFO Checking minimum RAM requirements
INFO Check if Podman binary exists in: /home/azureuser/.crc/bin/oc
INFO Checking if Virtualization is enabled
INFO Checking if KVM is enabled
INFO Checking if libvirt is installed
INFO Checking if user is part of libvirt group
INFO Checking if active user/process is currently part of the libvirt group
INFO Checking if libvirt daemon is running
INFO Checking if a supported libvirt version is installed
INFO Checking if crc-driver-libvirt is installed
INFO Checking crc daemon systemd socket units
INFO Checking if AppArmor is configured
INFO Checking if vsock is correctly configured
INFO Loading bundle: crc_libvirt_4.19.13_amd64...
CRC requires a pull secret to download content from Red Hat.
You can copy it from the Pull Secret section of https://console.redhat.com/openshift/create/local.
? Please enter the pull secret ********************************************************************************************************************************************************************************************************************

WARN Cannot add pull secret to keyring: The name org.freedesktop.secrets was not provided by any .service files
INFO Creating CRC VM for OpenShift 4.19.13...
INFO Generating new SSH key pair...
INFO Generating new password for the kubeadmin user
INFO Starting CRC VM for openshift 4.19.13...
INFO CRC instance is running with IP 127.0.0.1
INFO CRC VM is running
INFO Updating authorized keys...
INFO Configuring shared directories
INFO Check internal and public DNS query...
INFO Check DNS query from host...
INFO Verifying validity of the kubelet certificates...
INFO Starting kubelet service
INFO Waiting for kube-apiserver availability... [takes around 2min]
INFO Adding user's pull secret to the cluster...
INFO Updating SSH key to machine config resource...
INFO Overriding password for developer user
INFO Changing the password for the users
INFO Updating cluster ID...
INFO Updating root CA cert to admin-kubeconfig-client-ca configmap...
INFO Starting openshift instance... [waiting for the cluster to stabilize]
INFO 6 operators are progressing: console, image-registry, ingress, network, openshift-controller-manager, ...
INFO 5 operators are progressing: console, image-registry, ingress, network, openshift-controller-manager
INFO 4 operators are progressing: authentication, console, image-registry, network
INFO 3 operators are progressing: authentication, console, network
INFO Operator network is progressing
INFO Operator network is progressing
INFO All operators are available. Ensuring stability...
INFO Operators are stable (2/3)...
INFO Operators are stable (3/3)...
INFO Waiting until the user's pull secret is written to the instance disk...
INFO Adding crc-admin and crc-developer contexts to kubeconfig...
Started the OpenShift cluster.

The server is accessible via web console at:
  https://console-openshift-console.apps-crc.testing

Log in as administrator:
  Username: kubeadmin
  Password: TQEQH-nCGtH-fZjom-yrYQq

Log in as user:
  Username: developer
  Password: developer

Use the 'oc' command line interface:
  $ eval $(crc oc-env)
  $ oc login -u developer https://api.crc.testing:6443
azureuser@oc1:~$



azureuser@oc1:~$ virsh list --all
 Id   Name   State
----------------------
 1    crc    running

azureuser@oc1:~$
azureuser@oc1:~$
azureuser@oc1:~$ crc status
CRC VM:          Running
OpenShift:       Running (v4.19.13)
RAM Usage:       6.672GB of 10.95GB
Disk Usage:      23.95GB of 32.68GB (Inside the CRC VM)
Cache Usage:     30.77GB
Cache Directory: /home/azureuser/.crc/cache
azureuser@oc1:~$


